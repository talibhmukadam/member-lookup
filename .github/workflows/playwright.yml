name: Playwright E2E

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skip queued runs
concurrency:
  group: "pages-${{ github.workflow }}"
  cancel-in-progress: true

jobs:
  test:
    name: Run Playwright (${{ matrix.project }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project: [chromium-desktop, webkit-mobile]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Restore npm cache
        id: npm-cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-

      - name: Install dependencies
        if: ${{ steps.npm-cache.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Restore Playwright browser cache
        if: ${{ matrix.project != 'webkit-mobile' }}
        id: pw-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: pw-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            pw-${{ runner.os }}-

      - name: Install Playwright browsers (if needed)
        if: ${{ steps.pw-cache.outputs.cache-hit != 'true' }}
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: |
          npx playwright test --project=${{ matrix.project }} --reporter=line,html
          mv playwright-report playwright-report-${{ matrix.project }}

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.project }}
          path: playwright-report-${{ matrix.project }}

  publish-report:
    name: Publish Playwright HTML Report
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - name: Download reports
        uses: actions/download-artifact@v4
        with:
          pattern: playwright-report-*
          path: reports
          merge-multiple: false

      - name: List downloaded artifacts
        run: |
          echo "Contents of reports directory:"
          ls -la reports/
          echo "---"
          find reports/ -type f -name "*.html" | head -20

      - name: Generate report index
        run: |
          cd reports
          
          # Create index.html
          cat > index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="utf-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1.0" />
            <title>Playwright Test Reports</title>
            <style>
              body {
                font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
                max-width: 800px;
                margin: 0 auto;
                padding: 2rem;
                background: #f5f5f5;
              }
              h1 {
                color: #333;
                margin-bottom: 0.5rem;
              }
              .subtitle {
                color: #666;
                margin-bottom: 2rem;
              }
              ul {
                list-style: none;
                padding: 0;
              }
              li {
                margin: 1rem 0;
              }
              a {
                display: block;
                padding: 1rem;
                background: white;
                border-radius: 8px;
                text-decoration: none;
                color: #2563eb;
                box-shadow: 0 1px 3px rgba(0,0,0,0.1);
                transition: all 0.2s;
              }
              a:hover {
                box-shadow: 0 4px 6px rgba(0,0,0,0.1);
                transform: translateY(-2px);
              }
            </style>
          </head>
          <body>
            <h1>Playwright Test Reports</h1>
            <p class="subtitle">Select a browser to view test results</p>
            <ul>
          EOF
          
          # Add links for each report
          for dir in playwright-report-*; do
            if [ -d "$dir" ]; then
              name=${dir#playwright-report-}
              echo "      <li><a href=\"$dir/index.html\">ðŸ“Š $name</a></li>" >> index.html
            fi
          done
          
          cat >> index.html << 'EOF'
            </ul>
          </body>
          </html>
          EOF
          
          echo "Generated index.html:"
          cat index.html

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: reports
          
      - name: Verify artifact structure
        run: |
          echo "Final structure being uploaded:"
          ls -laR reports/ | head -50

  deploy:
    name: Deploy GitHub Pages
    runs-on: ubuntu-latest
    needs: publish-report
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Add report link to summary
        if: always()
        uses: actions/github-script@v7
        env:
          REPORT_URL: ${{ steps.deployment.outputs.page_url }}
        with:
          script: |
            const url = process.env.REPORT_URL;
            if (!url) {
              core.warning('Playwright report URL unavailable.');
            } else {
              await core.summary
                .addHeading('Playwright HTML Report')
                .addLink('View the combined HTML report', url)
                .write();
            }
