name: Playwright E2E

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skip queued runs
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
    name: Run Playwright (${{ matrix.project }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project: [chromium-desktop, webkit-mobile]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Restore npm cache
        id: npm-cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-

      - name: Install dependencies
        if: ${{ steps.npm-cache.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Restore Playwright browser cache
        if: ${{ matrix.project != 'webkit-mobile' }}
        id: pw-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: pw-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            pw-${{ runner.os }}-

      - name: Install Playwright browsers (if needed)
        if: ${{ steps.pw-cache.outputs.cache-hit != 'true' }}
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: |
          npx playwright test --project=${{ matrix.project }} --reporter=line,html
          mv playwright-report playwright-report-${{ matrix.project }}

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.project }}
          path: playwright-report-${{ matrix.project }}

  publish-report:
    name: Publish Playwright HTML Report
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - name: Download reports
        uses: actions/download-artifact@v4
        with:
          pattern: playwright-report-*
          path: reports
          merge-multiple: false

      - name: Generate report index
        run: |
          cd reports
          cat <<'HTML' > index.html
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="utf-8" />
            <title>Playwright Reports</title>
            <style>
              body { font-family: sans-serif; padding: 2rem; }
              h1 { margin-bottom: 1rem; }
              ul { line-height: 1.6; }
            </style>
          </head>
          <body>
            <h1>Playwright Reports</h1>
            <ul>
          HTML
          for dir in playwright-report-*; do
            name=${dir#playwright-report-}
            echo "      <li><a href=\"$dir/index.html\">$name</a></li>" >> index.html
          done
          cat <<'HTML' >> index.html
            </ul>
          </body>
          </html>
          HTML

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: reports

  deploy:
    name: Deploy GitHub Pages
    runs-on: ubuntu-latest
    needs: publish-report
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Add report link to summary
        if: always()
        uses: actions/github-script@v7
        env:
          REPORT_URL: ${{ steps.deployment.outputs.page_url }}
        with:
          script: |
            const url = process.env.REPORT_URL;
            if (!url) {
              core.warning('Playwright report URL unavailable.');
            } else {
              await core.summary
                .addHeading('Playwright HTML Report')
                .addLink('View the combined HTML report', url)
                .write();
            }
